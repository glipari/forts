    p1, p2, c2 : continuous;
    C1==1, C2==2, R2 : discrete;
    1<=T1<=10, 1<=T2<=10 : parameters;

automaton act1
sync : r1;
loc waiting1 : while p1<=T1 wait {}
    when p1>=T1 sync r1 do {p1'=0} goto waiting1;

end

automaton act2
sync : r2;
loc waiting2 : while p2<=T2 wait {}
    when p2>=T2 sync r2 do {p2'=0} goto waiting2;

end

automaton sched2
sync: r1, r2;

loc idle : while true wait{}
    when true sync r1 do {c2'=0, R2'=C1} goto busy;
    when true sync r2 do {c2'=0, R2'=C2} goto check;

loc busy : while c2<=R2 wait {}
    when c2>=R2 do {} goto idle;
    when c2<=R2 sync r1 do{R2'=R2+C1} goto busy;
    when c2<=R2 sync r2 do{R2'=R2+C2} goto check;

loc check : while c2<=R2 wait {}
    when c2>=R2 do {} goto idle;
    when c2<=R2 sync r1 do{R2'=R2+C1} goto check;
    when c2<R2 sync r2 do{R2'=R2+C2} goto error;

loc error : while true wait {}

end


init := loc[act1]==waiting1 &
        loc[act2]==waiting2 &
        loc[sched2]==idle &
        p1>=0 & p1<=T1 & p2>=0 & p2<=T2 &
        T1>=1 & T1<=10 & T2>=1 & T2<=10;

bad := loc[sched2]==error;
